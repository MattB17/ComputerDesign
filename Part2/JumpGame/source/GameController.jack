// The main controller used to control the jump game. Movement of the
// platforms is delegated to the PlatformController and movement of the jumper
// is delegated to the JumperController. GameController controls both of these.

class GameController {
  field int score_;

  field PlatformController platform_controller_; // controls the platforms.
  field ObstacleController obstacle_controller_; // controls the obstacles.
  field JumperController jumper_controller_; // controls the jumper.

  constructor GameController new(int platform_shift_size) {
    let score_ = 0;
    let platform_controller_ = PlatformController.new(platform_shift_size);
    let obstacle_controller_ = ObstacleController.new();
    let jumper_controller_ = JumperController.new(platform_shift_size);
    return this;
  }

  method void dispose() {
    do platform_controller_.dispose();
    do obstacle_controller_.dispose();
    do jumper_controller_.dispose();
    do Memory.deAlloc(this);
    return;
  }

  method void run() {
    var bool game_over;
    var char key;

    do platform_controller_.drawPlatforms();
    do jumper_controller_.drawJumper();

    let game_over = false;
    while (~game_over) {
      while ((key = 0) & (~game_over)) {
        let key = Keyboard.keyPressed();
        let score_ = score_ + 1;
        do platform_controller_.runControlLoop();
        let game_over = (~(jumper_controller_.runControlLoop()));
        if (score_ > 200) {
          do obstacle_controller_.runControlLoop();
        }
        do Sys.wait(200);
      }

      // if escape key is pressed the game is over
      if (key = Constants.escKey()) {
        let game_over = true;
      }
      if ((key = Constants.upArrowKey()) &
          (~(jumper_controller_.isJumping()))) {
        do jumper_controller_.startJump();
      }
      if ((key = Constants.downArrowKey()) &
          (jumper_controller_.isJumping())) {
        do jumper_controller_.setDownMovement();
      }
      if (key = Constants.leftArrowKey()) {
        do jumper_controller_.setLeftMovement();
      }
      if (key = Constants.rightArrowKey()) {
        do jumper_controller_.setRightMovement();
      }

      while ((~(key = 0)) & (~game_over)) {
        let key = Keyboard.keyPressed();
        let score_ = score_ + 1;
        do platform_controller_.runControlLoop();
        let game_over = (~(jumper_controller_.runControlLoop()));
        if (score_ > 200) {
          do obstacle_controller_.runControlLoop();
        }
        do Sys.wait(200);
      }
    }

    if (game_over) {
      do platform_controller_.erasePlatforms();
      do jumper_controller_.eraseJumper();
      if (score_ > 200) {
        do obstacle_controller_.eraseObstacle();
      }
      do Output.printString("Game Over");
      do Output.println();
      do Output.printString("Your score was: ");
      do Output.printInt(score_);
    }
    return;
  }
}
