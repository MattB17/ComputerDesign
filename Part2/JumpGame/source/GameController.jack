// The main controller used to control the jump game. Movement of the
// platforms is delegated to the PlatformController and movement of the jumper
// is delegated to the JumperController. GameController controls both of these.

class GameController {
  field PlatformController platform_controller_;
  field ObstacleController obstacle_controller_;

  constructor GameController new() {
    let platform_controller_ = PlatformController.new();
    let obstacle_controller_ = ObstacleController.new();
    return this;
  }

  method void dispose() {
    do platform_controller_.dispose();
    do obstacle_controller_.dispose();
    do Memory.deAlloc(this);
    return;
  }

  method void run() {
    var bool game_over;
    var char key;

    do platform_controller_.drawPlatforms();
    do obstacle_controller_.drawObstacle();

    let game_over = false;
    while (~game_over) {
      while ((key = 0) & (~game_over)) {
        let key = Keyboard.keyPressed();
        do platform_controller_.runControlLoop();
        do obstacle_controller_.runControlLoop();
        do Sys.wait(100);
      }

      // if escape key is pressed the game is over
      if (key = Constants.escKey()) {
        let game_over = true;
      }
      while ((~(key = 0)) & (~game_over)) {
        let key = Keyboard.keyPressed();
        do platform_controller_.runControlLoop();
        do obstacle_controller_.runControlLoop();
        do Sys.wait(100);
      }
    }

    if (game_over) {
      do platform_controller_.erasePlatforms();
      do obstacle_controller_.eraseObstacle();
    }
    return;
  }
}
