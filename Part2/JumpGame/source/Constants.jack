// A set of constants used throughout the game. They are named here to make
// it clearer what their purpose is, rather than just numbers scattered
// throughout the code.

class Constants {
  // The memory location where the board starts.
  function int boardStart() {
    return 16384;
  }

  // The number of 16-bit blocks in a row of the screen (512 / 16)
  function int blocksPerRow() {
    return 32;
  }

  // The size of a block (16-bits)
  function int blockSize() {
    return 16;
  }

  // The maximum jump height, expressed in terms of 16-bit blocks. That is the
  // maximum jump height is (jumpBlocks * 16)
  function int jumpBlocks() {
    return 12;
  }

  // The number of rows on the screen.
  function int boardHeight() {
    return 256;
  }

  // The number of columns on the screen.
  function int boardWidth() {
    return 512;
  }

  // The wait time between each iteration of the control loop.
  function int waitTime() {
    return 200;
  }

  // The integer value representing the space key.
  function int spaceKey() {
    return 32;
  }

  // The integer value representing the escape key.
  function int escKey() {
    return 140;
  }

  // The integer value representing the left arrow key.
  function int leftArrowKey() {
    return 130;
  }

  // The integer value representing the up arrow key.
  function int upArrowKey() {
    return 131;
  }

  // The integer value representing the right arrow key.
  function int rightArrowKey() {
    return 132;
  }

  // The integer value representing the down arrow key.
  function int downArrowKey() {
    return 133;
  }

  // An integer representing the number of rows between platforms.
  function int gapBetweenPlatforms() {
    return 90;
  }

  // Represents the bitmap array for an Obstacle.
  function Array obstacleBitMap() {
    var Array bit_map;
    let bit_map = Array.new(16);
    let bit_map[0] = 384;
    let bit_map[1] = 960;
    let bit_map[2] = 2016;
    let bit_map[3] = 4080;
    let bit_map[4] = 8184;
    let bit_map[5] = 16380;
    let bit_map[6] = 32766;
    let bit_map[7] = -1;
    let bit_map[8] = -1;
    let bit_map[9] = 32766;
    let bit_map[10] = 16380;
    let bit_map[11] = 8184;
    let bit_map[12] = 4080;
    let bit_map[13] = 2016;
    let bit_map[14] = 960;
    let bit_map[15] = 384;
    return bit_map;
  }

  // Represents the bitmap array for the Jumper.
  function Array jumperBitMap() {
    var Array bit_map;
    let bit_map = Array.new(16);
    let bit_map[0] = 4064;
    let bit_map[1] = 6192;
    let bit_map[2] = 4752;
    let bit_map[3] = 4112;
    let bit_map[4] = 5008;
    let bit_map[5] = 2080;
    let bit_map[6] = 1088;
    let bit_map[7] = 14392;
    let bit_map[8] = 8200;
    let bit_map[9] = 11368;
    let bit_map[10] = 10280;
    let bit_map[11] = 14392;
    let bit_map[12] = 2336;
    let bit_map[13] = 2720;
    let bit_map[14] = 7920;
    let bit_map[15] = 7920;
    return bit_map;
  }
}
