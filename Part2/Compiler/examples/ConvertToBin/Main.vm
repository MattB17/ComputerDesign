function Main.main 1
push constant 8001
push constant 16
push constant 1
neg
call Main.fillMemory 3
pop temp 0
push constant 8000
call Memory.peek 1
pop local 0
push local 0
call Main.convert 1
pop temp 0
push constant 0
return
function Main.convert 3
push constant 1
neg
pop local 2
label WHILE_LOOP0
push local 2
not
if-goto ENDLOOP0
push local 1
push constant 1
add
pop local 1
push local 0
call Main.nextMask 1
pop local 0
push local 1
push constant 16
gt
not
not
if-goto ENDIF1
push argument 0
push local 0
and
push constant 0
eq
not
not
if-goto ENDIF2
push constant 8000
push local 1
add
push constant 1
call Memory.poke 2
pop temp 0
goto ENDELSE2
label ENDIF2
push constant 8000
push local 1
add
push constant 0
call Memory.poke 2
pop temp 0
label ENDELSE2
goto ENDELSE1
label ENDIF1
push constant 0
pop local 2
label ENDELSE1
goto WHILE_LOOP0
label ENDLOOP0
push constant 0
return
function Main.nextMask 0
push argument 0
push constant 0
eq
not
if-goto ENDIF3
push constant 1
return
goto ENDELSE3
label ENDIF3
push argument 0
push constant 2
call Math.multiply 2
return
label ENDELSE3
function Main.fillMemory 0
label WHILE_LOOP4
push argument 1
push constant 0
gt
not
if-goto ENDLOOP4
push argument 0
push argument 2
call Memory.poke 2
pop temp 0
push argument 1
push constant 1
sub
pop argument 1
push argument 0
push constant 1
add
pop argument 0
goto WHILE_LOOP4
label ENDLOOP4
push constant 0
return
