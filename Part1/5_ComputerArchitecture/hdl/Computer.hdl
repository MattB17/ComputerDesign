// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.

/**
 * The HACK computer, including CPU, ROM and RAM.
 * When reset is 0, the program stored in the computer's ROM executes.
 * When reset is 1, the execution of the program restarts.
 * Thus, to start a program's execution, reset must be pushed "up" (1)
 * and "down" (0). From this point onward the user is at the mercy of
 * the software. In particular, depending on the program's code, the
 * screen may show some output and the user may be able to interact
 * with the computer via the keyboard.
*/

CHIP Computer {

    IN reset;

    // Implementation by Matt Buckley
    PARTS:
    // ROM accepts a 15-bit address and outputs the next instruction
    // the address corresponds to the PC from the CPU
    ROM32K(address=cpuPC, out=romInstruction);

    // CPU takes the reset bit, the instruction from the ROM, and the
    // input from memory. It then outputs the program counter, the memory
    // address, the output value to be stored in memory, and a load bit
    // dictating whether the value will actually be written to memory
    CPU(inM=memOut, instruction=romInstruction, reset=reset,
        outM=cpuOut, writeM=writeToMem, addressM=memAddress, pc=cpuPC);

    // Memory takes the output from the CPU as input, the address output
    // from the CPU and the load bit is set to the value of the write bit
    // from the CPU. It's output is fed back to the CPU
    Memory(in=cpuOut, load=writeToMem, address=memAddress, out=memOut);
}
